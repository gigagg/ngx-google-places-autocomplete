{"version":3,"sources":["../src/ngx-google-places-autocomplete.directive.ts"],"names":[],"mappings":"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","file":"ngx-google-places-autocomplete.directive.js","sourceRoot":"","sourcesContent":["import {AfterViewInit, Directive, ElementRef, EventEmitter, Input, NgZone, Output} from '@angular/core';\nimport {Address} from './objects/address';\nimport {Options} from './objects/options/options';\n\ndeclare let google: any;\nexport class GooglePlaceDirective implements AfterViewInit {\n     options: Options;\n     onAddressChange: EventEmitter<Address> = new EventEmitter();\nprivate autocomplete: any;\nprivate eventListener: any;\npublic place: Address;\n/**\n * @param {?} el\n * @param {?} ngZone\n */\nconstructor(private el: ElementRef,\nprivate ngZone: NgZone) {\n    }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n        if (!this.options)\n            this.options = new Options();\n\n        this.initialize();\n    }\n/**\n * @return {?}\n */\nprivate isGoogleLibExists(): boolean {\n        return !(!google || !google.maps || !google.maps.places);\n    }\n/**\n * @return {?}\n */\nprivate initialize(): void {\n        if (!this.isGoogleLibExists())\n            throw new Error(\"Google maps library can not be found\");\n\n        this.autocomplete = new google.maps.places.Autocomplete(this.el.nativeElement, this.options);\n\n        if (!this.autocomplete)\n            throw new Error(\"Autocomplete is not initialized\");\n\n        if (!this.autocomplete.addListener != null) { // Check to bypass https://github.com/angular-ui/angular-google-maps/issues/270\n            this.eventListener = this.autocomplete.addListener('place_changed', () => {\n                this.handleChangeEvent()\n            });\n        }\n\n        this.el.nativeElement.addEventListener('keydown', (event: KeyboardEvent) => {\n            if(!event.key) {\n                return;\n            }\n\n            let /** @type {?} */ key = event.key.toLowerCase();\n\n            if (key == 'enter' && event.target === this.el.nativeElement) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        });\n\n        // according to https://gist.github.com/schoenobates/ef578a02ac8ab6726487\n        if (window && window.navigator && window.navigator.userAgent && navigator.userAgent.match(/(iPad|iPhone|iPod)/g)) {\n            setTimeout(() => {\n                let /** @type {?} */ containers = document.getElementsByClassName('pac-container');\n\n                if (containers) {\n                    let /** @type {?} */ arr = Array.from(containers);\n\n                    if (arr) {\n                        for (let /** @type {?} */ container of arr) {\n                            if (!container)\n                                continue;\n\n                            container.addEventListener('touchend', (e) => {\n                                e.stopImmediatePropagation();\n                            });\n                        }\n\n                    }\n                }\n            }, 500);\n        }\n    }\n/**\n * @return {?}\n */\npublic reset(): void {\n        this.autocomplete.setComponentRestrictions(this.options.componentRestrictions);\n        this.autocomplete.setTypes(this.options.types);\n    }\n/**\n * @return {?}\n */\nprivate handleChangeEvent(): void {\n        this.ngZone.run(() => {\n            this.place = this.autocomplete.getPlace();\n\n            if (this.place) {\n                this.onAddressChange.emit(this.place);\n            }\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[ngx-google-places-autocomplete]',\n    exportAs: 'ngx-places'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: Input, args: ['options', ] },],\n'onAddressChange': [{ type: Output },],\n};\n}\n\nfunction GooglePlaceDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nGooglePlaceDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGooglePlaceDirective.ctorParameters;\n/** @type {?} */\nGooglePlaceDirective.propDecorators;\n/** @type {?} */\nGooglePlaceDirective.prototype.options;\n/** @type {?} */\nGooglePlaceDirective.prototype.onAddressChange;\n/** @type {?} */\nGooglePlaceDirective.prototype.autocomplete;\n/** @type {?} */\nGooglePlaceDirective.prototype.eventListener;\n/** @type {?} */\nGooglePlaceDirective.prototype.place;\n/** @type {?} */\nGooglePlaceDirective.prototype.el;\n/** @type {?} */\nGooglePlaceDirective.prototype.ngZone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}